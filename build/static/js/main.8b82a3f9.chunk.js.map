{"version":3,"sources":["components/Header.jsx","components/NoteCreation.jsx","components/Note.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","NoteCreation","useState","title","content","note","setNote","handleChange","event","target","name","value","prevNote","onChange","placeholder","rows","onClick","onAdd","preventDefault","Note","className","onDelete","id","App","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","newNote","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OASeA,MANf,SAAgBC,GACd,OAAO,iCACL,+C,cC8CWC,MAjDf,SAAsBD,GAAQ,IAAD,EAEHE,mBAAS,CAC/BC,MAAO,GACPC,QAAS,KAJgB,mBAEpBC,EAFoB,KAEdC,EAFc,KAO3B,SAASC,EAAaC,GAAQ,IAAD,EACHA,EAAMC,OAAtBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MAEdL,GAAQ,SAAAM,GACN,OAAO,2BACFA,GADL,kBAEGF,EAAOC,OAcd,OACE,8BACE,iCACE,uBACED,KAAK,QACLG,SAAUN,EACVI,MAAON,EAAKF,MACZW,YAAY,UAEd,0BACEJ,KAAK,UACLG,SAAUN,EACVI,MAAON,EAAKD,QACZU,YAAY,iBACZC,KAAK,MAEP,wBAAQC,QAzBd,SAAoBR,GAClBR,EAAMiB,MAAMZ,GACZC,EAAQ,CACNH,MAAO,GACPC,QAAS,KAEXI,EAAMU,kBAmBF,uBC5BOC,MAff,SAAcnB,GAMZ,OACE,sBAAKoB,UAAU,OAAf,UACE,6BAAKpB,EAAMG,QACX,4BAAIH,EAAMI,UACV,wBAAQY,QARZ,WACEhB,EAAMqB,SAASrB,EAAMsB,KAOnB,wBC+BSC,MArCf,WAAgB,IAAD,EAEarB,mBAAS,IAFtB,mBAENsB,EAFM,KAECC,EAFD,KAUb,SAASC,EAAWJ,GAClBG,GAAS,SAAAE,GACP,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GACjC,OAAOA,IAAUR,QAKvB,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAcL,MAjBlB,SAAiBc,GACfN,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsBI,UAgBrBP,EAAMQ,KAAI,SAACH,EAAUC,GACpB,OACE,cAAC,EAAD,CAEER,GAAIQ,EACJ3B,MAAO0B,EAAS1B,MAChBC,QAASyB,EAASzB,QAClBiB,SAAUK,GAJLI,UCnBFG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b82a3f9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Header(props) {\r\n  return <header>\r\n    <h1>NoteKeeper</h1>\r\n  </header>\r\n}\r\n\r\nexport default Header;","import React, {useState} from \"react\";\r\n\r\nfunction NoteCreation(props) {\r\n\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\"\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setNote(prevNote => {\r\n      return {\r\n        ...prevNote,\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  function submitNote(event) {\r\n    props.onAdd(note);\r\n    setNote({\r\n      title: \"\",\r\n      content: \"\"\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input\r\n          name=\"title\"\r\n          onChange={handleChange}\r\n          value={note.title}\r\n          placeholder=\"Title\"\r\n        />\r\n        <textarea\r\n          name=\"content\"\r\n          onChange={handleChange}\r\n          value={note.content}\r\n          placeholder=\"Take a note...\"\r\n          rows=\"3\"\r\n        />\r\n        <button onClick={submitNote}>Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteCreation;\r\n","import React from \"react\";\r\n\r\nfunction Note(props) {\r\n\r\n  function handleDelete() {\r\n    props.onDelete(props.id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      <h1>{props.title}</h1>\r\n      <p>{props.content}</p>\r\n      <button onClick={handleDelete}>DELETE</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;","import './App.css';\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport NoteCreation from './components/NoteCreation';\nimport Note from './components/Note';\n\nfunction App() {\n\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    })\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <NoteCreation onAdd={addNote}/>\n      {notes.map((noteItem, index) => {\n        return (\n          <Note \n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}